{% set ceilometer_source = fetch_source('https://tarballs.openstack.org/ceilometer/ceilometer-stable-train.tar.gz') %}
{% set monasca_ceilometer_source = fetch_source('https://tarballs.openstack.org/monasca-ceilometer/monasca-ceilometer-stable-train.tar.gz') %}
{% set ceilometer_pypi_name = 'ceilometer' %}
{% set pypi_name = ceilometer_pypi_name %}
{% set ceilometer_upstream_version = upstream_version() %}

{% set pypi_name = 'monasca-ceilometer' %}
{% set pypi_tar_name = 'monasca_ceilometer' %}
{% set upstream_version = upstream_version() %}
{% set rpm_release = '1' %}

%define component {{ pypi_name }}
# ceilometer macros
%define ceilometer_name {{ ceilometer_pypi_name }}
%define openstack_ceilometer_name openstack-%{ceilometer_name}
%define ceilometer_version {{ ceilometer_upstream_version }}
# ceilometer source base dir name
%define ceilometer_base %{ceilometer_name}-%{ceilometer_version}
# monasca-ceilometer macros
%define monasca_ceilometer_source_base_name monasca_ceilometer
# monasca-ceilometer source base dir name
%define monasca_ceilometer_base %{monasca_ceilometer_source_base_name}-{{ upstream_version }}
# combined pkg macros
%global sname {{ pypi_name }}
%define groupname %{ceilometer_name}
%define username %{ceilometer_name}
%if 0%{?rhel} || 0%{?fedora}
%global rdo 1
%else
%global rdo 0
%endif
Name:           {{ py2name() }}
Epoch:          {{ epoch('monasca-ceilometer') }}
Version:        {{ py2rpmversion() }}
Release:        {{ py2rpmrelease() }}
Summary:        OpenStack Ceilometer integrated with Monasca
License:        {{ license('Apache-2.0') }}
Group:          System/Management
URL:            https://launchpad.net/monasca
Source0:        {{ monasca_ceilometer_source|basename }}
# ceilometer source tar
Source1:        {{ ceilometer_source|basename }}
Source2:        %{openstack_ceilometer_name}.logrotate
Source3:        %{openstack_ceilometer_name}.defaultconf
Source4:        %{openstack_ceilometer_name}.tmpfiles
Source5:        %{openstack_ceilometer_name}-polkit.rules
# systemd service files
Source12:       %{openstack_ceilometer_name}-polling.service
Source13:       %{openstack_ceilometer_name}-agent-central.service
Source14:       %{openstack_ceilometer_name}-agent-compute.service
Source15:       %{openstack_ceilometer_name}-agent-ipmi.service
Source16:       %{openstack_ceilometer_name}-agent-notification.service
Source50:       monasca-ceilometer.README.config
BuildRequires:  crudini
## ceilometer dependencies
BuildRequires:  openstack-macros
# to make orphaned-file-tests happy
BuildRequires:  polkit
BuildRequires:  {{ py3('PasteDeploy') }}
BuildRequires:  {{ py3('WSME') }}
BuildRequires:  {{ py3('cachetools') }}
BuildRequires:  {{ py3('python-cinderclient') }}
BuildRequires:  {{ py3('cotyledon') }}
BuildRequires:  {{ py3('python-glanceclient') }}
BuildRequires:  {{ py3('gnocchiclient') }}
BuildRequires:  {{ py3('jsonpath-rw') }}
BuildRequires:  {{ py3('jsonpath-rw-ext') }}
BuildRequires:  {{ py3('jsonschema') }}
BuildRequires:  {{ py3('keystonemiddleware') }}
BuildRequires:  {{ py3('lxml') }}
BuildRequires:  {{ py3('msgpack') }}
BuildRequires:  {{ py3('python-neutronclient') }}
BuildRequires:  {{ py3('python-novaclient') }}
BuildRequires:  {{ py3('openstackdocstheme') }}
BuildRequires:  {{ py3('os-xenapi') }}
BuildRequires:  {{ py3('oslo.config') }}
BuildRequires:  {{ py3('oslo.db') }}
BuildRequires:  {{ py3('oslo.messaging') }}
BuildRequires:  {{ py3('oslo.policy') }}
BuildRequires:  {{ py3('oslo.privsep') }}
BuildRequires:  {{ py3('oslo.reports') }}
BuildRequires:  {{ py3('oslo.serialization') }}
BuildRequires:  {{ py3('oslo.upgradecheck') }}
BuildRequires:  {{ py3('oslo.utils') }}
BuildRequires:  {{ py3('oslo.vmware') }}
BuildRequires:  {{ py3('pbr') }}
BuildRequires:  {{ py3('pecan') }}
BuildRequires:  {{ py3('six') }}
BuildRequires:  {{ py3('stevedore') }}
BuildRequires:  {{ py3('swiftclient') }}
BuildRequires:  {{ py3('tooz') }}
Requires:       logrotate
Requires:       polkit
Requires:       python3-{{ pypi_name }} = %{epoch}:%{version}-%{release}
Requires:       {{ py3('pbr') }}
BuildArch:      noarch
%if 0%{?suse_version}
BuildRequires:  systemd-rpm-macros
Requires(pre):  pwdutils
%{?systemd_requires}
%else
BuildRequires:  systemd
Requires(post): systemd
Requires(postun):   systemd
Requires(preun):    systemd
%endif

%description
Ceilometer aims to deliver a unique point of contact for billing systems to
aquire all counters they need to establish customer billing, accross all
current and future OpenStack components. The delivery of counters must be
tracable and auditable, the counters must be easily extensible to support new
projects, and agents doing data collections should be independent of the
overall system.
Monasca Ceilometer (Ceilosca) is an add-on to Ceilometer which enables the
metering data to be stored in Monasca Datastore via publisher mechanism as
monasca metrics.

%package -n python3-{{ pypi_name }}
Summary:        OpenStack Metering (Ceilometer) integrated with Monasca - Python module
Group:          Development/Languages/Python
Requires:       {{ py3('PasteDeploy') }}
Requires:       {{ py3('PyYAML') }}
Requires:       {{ py3('SQLAlchemy') }}
Requires:       {{ py3('WSME') }}
Requires:       {{ py3('WebOb') }}
Requires:       {{ py3('python-cinderclient') }}
Requires:       {{ py3('cotyledon') }}
Requires:       {{ py3('debtcollector') }}
Requires:       {{ py3('futurist') }}
Requires:       {{ py3('python-glanceclient') }}
Requires:       {{ py3('jsonpath-rw') }}
Requires:       {{ py3('jsonpath-rw-ext') }}
Requires:       {{ py3('jsonschema') }}
Requires:       {{ py3('kafka-python') }}
Requires:       {{ py3('keystoneauth1') }}
Requires:       {{ py3('python-keystoneclient') }}
Requires:       {{ py3('keystonemiddleware') }}
Requires:       {{ py3('lxml') }}
Requires:       {{ py3('monotonic') }}
Requires:       {{ py3('msgpack') }}
Requires:       {{ py3('python-neutronclient') }}
Requires:       {{ py3('python-novaclient') }}
Requires:       {{ py3('os-xenapi') }}
Requires:       {{ py3('oslo.cache') }}
Requires:       {{ py3('oslo.concurrency') }}
Requires:       {{ py3('oslo.config') }}
Requires:       {{ py3('oslo.db') }}
Requires:       {{ py3('oslo.i18n') }}
Requires:       {{ py3('oslo.log') }}
Requires:       {{ py3('oslo.messaging') }}
Requires:       {{ py3('oslo.middleware') }}
Requires:       {{ py3('oslo.policy') }}
Requires:       {{ py3('oslo.privsep') }}
Requires:       {{ py3('oslo.reports') }}
Requires:       {{ py3('oslo.rootwrap') }}
Requires:       {{ py3('oslo.serialization') }}
Requires:       {{ py3('oslo.upgradecheck') }}
Requires:       {{ py3('oslo.utils') }}
Requires:       {{ py3('oslo.vmware') }}
Requires:       {{ py3('pecan') }}
Requires:       {{ py3('pymongo') }}
Requires:       {{ py3('pysnmp') }}
Requires:       {{ py3('python-dateutil') }}
Requires:       {{ py3('requests') }}
Requires:       {{ py3('six') }}
Requires:       {{ py3('sqlalchemy-migrate') }}
Requires:       {{ py3('stevedore') }}
Requires:       {{ py3('python-swiftclient') }}
Requires:       {{ py3('tenacity') }}
Requires:       {{ py3('tooz') }}
# python-monasca-ceilometer cannot exist with openstack-ceilometer
Conflicts:      %{openstack_ceilometer_name}
%if ! 0%{?rdo}
Requires:       {{ py3('requests-aws') }}
%endif

%description -n python3-{{ pypi_name }}
This package contains the core Python module of %{name}.

%package polling
Summary:        OpenStack Metering (Ceilometer) - Polling
Group:          Development/Languages/Python
Requires:       openstack-{{ pypi_name }} = %{epoch}:%{version}-%{release}
# openstack-monasca-ceilometer-polling cannot exist with openstack-ceilometer
Conflicts:      %{openstack_ceilometer_name}-polling

%description polling
This package contains the %{name} polling.

%package agent-central
Summary:        OpenStack Metering (Ceilometer) - Agent Central
Group:          Development/Languages/Python
Requires:       %{name} = %{version}
Requires:       %{name}-polling = %{version}
# openstack-monasca-ceilometer-agent-central cannot exist with openstack-ceilometer
Conflicts:      %{openstack_ceilometer_name}-agent-central

%description agent-central
This package contains the %{name} central agent.

%package agent-compute
Summary:        OpenStack Metering (Ceilometer) - Agent Compute
Group:          Development/Languages/Python
Requires:       %{name} = %{version}
Requires:       %{name}-polling = %{version}-%{release}
# openstack-monasca-ceilometer-agent-compute cannot exist with openstack-ceilometer
Conflicts:      %{openstack_ceilometer_name}-agent-compute

%description agent-compute
This package contains the %{name} compute agent.

%package agent-ipmi
Summary:        OpenStack Metering (Ceilometer) - Agent IPMI
Group:          Development/Languages/Python
Requires:       %{name} = %{version}-%{release}
Requires:       %{name}-polling = %{version}-%{release}
# openstack-monasca-ceilometer-agent-ipmi cannot exist with openstack-ceilometer
Conflicts:      %{openstack_ceilometer_name}-agent-ipmi

%description agent-ipmi
This package contains the %{name} IPMI agent.

%package agent-notification
Summary:        OpenStack Metering (Ceilometer) - Agent Notification
Group:          Development/Languages/Python
Requires:       %{name} = %{version}-%{release}
Requires:       ipmitool
# openstack-monasca-ceilometer-agent-notification cannot exist with openstack-ceilometer
Conflicts:      %{openstack_ceilometer_name}-agent-notification

%description agent-notification
This package contains the %{name} notification agent.

%package test
Summary:        OpenStack Metering (Ceilometer) - Testsuite
Group:          Development/Languages/Python
Requires:       %{name} = %{version}-%{release}
Requires:       %{name}-agent-central = %{version}-%{release}
Requires:       %{name}-agent-compute = %{version}-%{release}
Requires:       %{name}-agent-ipmi = %{version}-%{release}
Requires:       %{name}-polling = %{version}-%{release}
Requires:       {{ py3('WebTest') }}
Requires:       {{ py3('fixtures') }}
Requires:       {{ py3('gabbi') }}
Requires:       {{ py3('mock') }}
Requires:       {{ py3('os-win') }}
Requires:       {{ py3('oslotest') }}
Requires:       {{ py3('psycopg2') }}
Requires:       {{ py3('python-subunit') }}
Requires:       {{ py3('sphinxcontrib-httpdomain') }}
Requires:       {{ py3('sphinxcontrib-pecanwsme') }}
Requires:       {{ py3('python-swiftclient') }}
Requires:       {{ py3('testscenarios') }}
Requires:       {{ py3('testtools') }}
Conflicts:       %{openstack_ceilometer_name}-test
# openstack-monasca-ceilometer-test cannot exist with openstack-ceilometer

%description test
This package contains testsuite files for %{name}.

%prep

# unpack monasca-ceilometer source
%autosetup -T -b 0 -n %{monasca_ceilometer_base}
%py_req_cleanup

# unpack ceilometer source
%autosetup -T -b 1 -n %{ceilometer_base}
%py_req_cleanup

# copy monasca-ceilometer source files
cp  ../%{monasca_ceilometer_source_base_name}*/ceilosca/ceilometer/monasca_client.py ../%{ceilometer_name}*/%{ceilometer_name}/
cp  ../%{monasca_ceilometer_source_base_name}*/ceilosca/ceilometer/monasca_opts.py ../%{ceilometer_name}*/%{ceilometer_name}/
cp  ../%{monasca_ceilometer_source_base_name}*/ceilosca/ceilometer/opts.py ../%{ceilometer_name}*/%{ceilometer_name}/
cp  ../%{monasca_ceilometer_source_base_name}*/ceilosca/ceilometer/publisher/monasca_data_filter.py ../%{ceilometer_name}*/%{ceilometer_name}/publisher/
cp  ../%{monasca_ceilometer_source_base_name}*/ceilosca/ceilometer/publisher/monasca.py ../%{ceilometer_name}*/%{ceilometer_name}/publisher/

# copy tests
cp -r  ../%{monasca_ceilometer_source_base_name}*/ceilosca/ceilometer/tests/ ../%{ceilometer_name}*/%{ceilometer_name}/

# modify setup.cfg, add monasca-ceilometer publisher entry points
%define setup_cfg ../%{ceilometer_name}*/setup.cfg
# add monasca-ceilometer publisher to entry points
pub_list=`crudini --get %{setup_cfg} entry_points ceilometer.sample.publisher`
pub_list="$pub_list"$'\n'"monasca = ceilometer.publisher.monasca:MonascaPublisher"
crudini --set %{setup_cfg} entry_points ceilometer.sample.publisher $"$pub_list"

# Fix send_test_data.py shebang
sed -i 's#%{_bindir}/env python#%{_bindir}/python3#' tools/send_test_data.py

%build
#change to ceilometer directory
cd ../%{ceilometer_name}*/
%{py3_build}

# Currently there exists only a general man-page with the same content as the
# HTML documenation. Thus we shouldn't build it:
#python setup.py build_sphinx -b man -s doc/source

PYTHONPATH=. oslo-config-generator --config-file etc/ceilometer/ceilometer-config-generator.conf > etc/ceilometer/ceilometer.conf

%install
#change to ceilometer directory
cd ../%{ceilometer_base}
%{py3_install}

### directories
install -d -m 755 %{buildroot}%{_localstatedir}/{lib,log}/%{ceilometer_name}
install -d -m 750 %{buildroot}%{_localstatedir}/{cache}/%{ceilometer_name}
install -d -m 700 %{buildroot}/run/%{ceilometer_name}
install -D -m 644 %{SOURCE4} %{buildroot}/%_tmpfilesdir/%{openstack_ceilometer_name}.conf

### configuration files
install -d -m 0755 %{buildroot}%{_sysconfdir}/%{ceilometer_name}
cp %{buildroot}%{python3_sitelib}/%{ceilometer_name}/pipeline/data/*.yaml %{buildroot}%{_sysconfdir}/%{ceilometer_name}
install -p -D -m 640 %{SOURCE3} %{buildroot}%{_sysconfdir}/ceilometer/ceilometer.conf.d/010-ceilometer.conf
# default to using database publisher instead of gnocchi, which
# needs to be installed separately
sed -i 's/gnocchi:\/\//database:\/\//g' %{buildroot}%{_sysconfdir}/%{ceilometer_name}/pipeline.yaml
install -p -D -m 640 %{SOURCE50} %{buildroot}%{_sysconfdir}/%{ceilometer_name}/README.config
# delete the ceilometer.conf - we generated our own with oslo-config-generator
rm %{buildroot}%{_prefix}%{_sysconfdir}/ceilometer/ceilometer.conf
rm %{buildroot}%{_prefix}%{_sysconfdir}/ceilometer/ceilometer-config-generator.conf
# for whatever reason, upstream installs config files into usr/etc/... (lint added _prefix)
mv %{buildroot}%{_prefix}/%{_sysconfdir}/%{ceilometer_name}/* %{buildroot}%{_sysconfdir}/%{ceilometer_name}/.

mv etc/ceilometer/ceilometer.conf %{buildroot}%{_sysconfdir}/%{ceilometer_name}/.
# TODO: where to put the config examples?
rm -rf %{buildroot}%{_sysconfdir}/%{ceilometer_name}/examples/
install -d -m 755 %{buildroot}%{_sysconfdir}/%{ceilometer_name}/%{ceilometer_name}.conf.d/

# bash-completion/logrotate/etc.
install -p -D -m 644 %{SOURCE2} %{buildroot}%{_sysconfdir}/logrotate.d/%{openstack_ceilometer_name}

# Install systemd unit services
install -p -D -m 444 %{SOURCE12} %{buildroot}%{_unitdir}/%{openstack_ceilometer_name}-polling.service
install -p -D -m 444 %{SOURCE13} %{buildroot}%{_unitdir}/%{openstack_ceilometer_name}-agent-central.service
install -p -D -m 444 %{SOURCE14} %{buildroot}%{_unitdir}/%{openstack_ceilometer_name}-agent-compute.service
install -p -D -m 444 %{SOURCE15} %{buildroot}%{_unitdir}/%{openstack_ceilometer_name}-agent-ipmi.service
install -p -D -m 444 %{SOURCE16} %{buildroot}%{_unitdir}/%{openstack_ceilometer_name}-agent-notification.service

# install symlinks on SUSE
%if 0%{?suse_version}
mkdir -p %{buildroot}%{_sbindir}
ln -s %{_sbindir}/service %{buildroot}%{_sbindir}/rc%{openstack_ceilometer_name}-polling
ln -s %{_sbindir}/service %{buildroot}%{_sbindir}/rc%{openstack_ceilometer_name}-agent-central
ln -s %{_sbindir}/service %{buildroot}%{_sbindir}/rc%{openstack_ceilometer_name}-agent-compute
ln -s %{_sbindir}/service %{buildroot}%{_sbindir}/rc%{openstack_ceilometer_name}-agent-ipmi
ln -s %{_sbindir}/service %{buildroot}%{_sbindir}/rc%{openstack_ceilometer_name}-agent-notification
%endif

### policy kit
install -D -m 644 %{SOURCE5} %{buildroot}%{_datadir}/polkit-1/rules.d/11-%{openstack_ceilometer_name}.rules

### test subpackage

# override openstack_test_package_buildroot_dir and component used by macro openstack_test_package_install
%define openstack_test_package_buildroot_dir %{buildroot}%{name}-%{version}/{_localstatedir}/lib/%{name}-test
%define component ceilometer
%openstack_test_package_install ceilometer
# reset component back to monasca-ceilometer
%define component {{ pypi_name }}

### authentication cache dir
mkdir -p %{buildroot}%{_localstatedir}/cache/ceilometer

%pre
%openstack_pre_user_group_create %{username} %{groupname} /sbin/nologin

%post
%tmpfiles_create %{_tmpfilesdir}/%{openstack_ceilometer_name}.conf

%post polling
%systemd_post %{openstack_ceilometer_name}-polling.service

%preun polling
%systemd_preun %{openstack_ceilometer_name}-polling.service

%postun polling
%systemd_postun_with_restart %{openstack_ceilometer_name}-polling.service

%post agent-central
%systemd_post %{openstack_ceilometer_name}-agent-central.service

%preun agent-central
%systemd_preun %{openstack_ceilometer_name}-agent-central.service

%postun agent-central
%systemd_postun_with_restart %{openstack_ceilometer_name}-agent-central.service

%post agent-compute
%systemd_post %{openstack_ceilometer_name}-agent-compute.service

%preun agent-compute
%systemd_preun %{openstack_ceilometer_name}-agent-compute.service

%postun agent-compute
%systemd_postun_with_restart %{openstack_ceilometer_name}-agent-compute.service

%post agent-ipmi
%systemd_post %{openstack_ceilometer_name}-agent-ipmi.service

%preun agent-ipmi
%systemd_preun %{openstack_ceilometer_name}-agent-ipmi.service

%postun agent-ipmi
%systemd_postun_with_restart %{openstack_ceilometer_name}-agent-ipmi.service

%post agent-notification
%systemd_post %{openstack_ceilometer_name}-agent-notification.service

%preun agent-notification
%systemd_preun %{openstack_ceilometer_name}-agent-notification.service

%postun agent-notification
%systemd_postun_with_restart %{openstack_ceilometer_name}-agent-notification.service

%files
%license LICENSE
%doc README.rst
%{_bindir}/ceilometer-upgrade
%{_bindir}/ceilometer-send-sample
%{_bindir}/ceilometer-rootwrap
%{_bindir}/ceilometer-status
%dir %{_sysconfdir}/%{ceilometer_name}
%dir %{_sysconfdir}/%{ceilometer_name}/%{ceilometer_name}.conf.d/
%{_sysconfdir}/%{ceilometer_name}/README.config
%config(noreplace) %attr(0640, root, %{groupname}) %{_sysconfdir}/%{ceilometer_name}/%{ceilometer_name}.conf
%config(noreplace) %attr(0640, root, %{groupname}) %{_sysconfdir}/%{ceilometer_name}/%{ceilometer_name}.conf.d/010-%{ceilometer_name}.conf
%config(noreplace) %attr(0640, root, %{groupname}) %{_sysconfdir}/%{ceilometer_name}/polling.yaml
%config(noreplace) %attr(0640, root, %{groupname}) %{_sysconfdir}/%{ceilometer_name}/polling_all.yaml
%config(noreplace) %attr(0640, root, %{groupname}) %{_sysconfdir}/%{ceilometer_name}/pipeline.yaml
%config(noreplace) %attr(0640, root, %{groupname}) %{_sysconfdir}/%{ceilometer_name}/event_pipeline.yaml
%config(noreplace) %attr(0640, root, %{groupname}) %{_sysconfdir}/%{ceilometer_name}/event_definitions.yaml
%config(noreplace) %{_sysconfdir}/logrotate.d/%{openstack_ceilometer_name}
%config %{_sysconfdir}/%{ceilometer_name}/rootwrap.conf
%dir %{_sysconfdir}/%{ceilometer_name}/rootwrap.d
%config %{_sysconfdir}/%{ceilometer_name}/rootwrap.d/ipmi.filters
%dir %attr(0755, %{username}, %{groupname}) %{_localstatedir}/lib/%{ceilometer_name}
%dir %attr(0750, %{username}, %{groupname}) %{_localstatedir}/cache/%{ceilometer_name}
%dir %attr(0750, %{username}, %{groupname}) %{_localstatedir}/log/%{ceilometer_name}
%_tmpfilesdir/%{openstack_ceilometer_name}.conf

%files -n python3-{{ pypi_name }}
%{python3_sitelib}/%{ceilometer_name}/
%{python3_sitelib}/%{ceilometer_name}-*.egg-info
# Part of test subpackage (except the tempest tests)
%exclude %{python3_sitelib}/%{ceilometer_name}/tests/unit/

%files polling
%{_unitdir}/%{openstack_ceilometer_name}-polling.service
%if 0%{?suse_version}
%{_sbindir}/rc%{openstack_ceilometer_name}-polling
%endif
%{_bindir}/%{ceilometer_name}-polling

%files agent-central
%{_unitdir}/%{openstack_ceilometer_name}-agent-central.service
%if 0%{?suse_version}
%{_sbindir}/rc%{openstack_ceilometer_name}-agent-central
%endif

%files agent-compute
%{_unitdir}/%{openstack_ceilometer_name}-agent-compute.service
%if 0%{?suse_version}
%{_sbindir}/rc%{openstack_ceilometer_name}-agent-compute
%endif
%{_datadir}/polkit-1/rules.d/11-%{openstack_ceilometer_name}.rules

%files agent-ipmi
%{_unitdir}/%{openstack_ceilometer_name}-agent-ipmi.service
%if 0%{?suse_version}
%{_sbindir}/rc%{openstack_ceilometer_name}-agent-ipmi
%endif

%files agent-notification
%{_unitdir}/%{openstack_ceilometer_name}-agent-notification.service
%if 0%{?suse_version}
%{_sbindir}/rc%{openstack_ceilometer_name}-agent-notification
%endif
%{_bindir}/%{ceilometer_name}-agent-notification

%files test
%{python3_sitelib}/%{ceilometer_name}/tests/unit/

%{_localstatedir}/lib/%{name}-test/

%changelog
