{% set pypi_name = 'python-ironicclient' %}
{% set upstream_version = upstream_version('2.5.4') %}
{% set rpm_release = '1' %}
{% set source = url_pypi() %}

Name:           {{ py2name() }}
Version:        {{ py2rpmversion() }}
Release:        {{ py2rpmrelease() }}
Summary:        Python API and CLI for OpenStack Ironic
License:        {{ license('Apache-2.0')}}
Group:          Development/Languages/Python
URL:            https://launchpad.net/{{ pypi_name }}
Source0:        {{ source }}
BuildRequires:  openstack-macros
BuildRequires:  {{ py2pkg('devel', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('Babel', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('PrettyTable', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('PyYAML', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('appdirs', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('dogpile.cache', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('fixtures', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('jsonschema', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('mock', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('python-openstackclient', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('os-testr', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('osc-lib', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('oslo.i18n', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('oslo.utils', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('oslotest', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('pbr', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('python-subunit', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('requests', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('requests-mock', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('testtools', py_versions=['py2', 'py3']) }}
Requires:       {{ py2pkg('PrettyTable') }}
Requires:       {{ py2pkg('PyYAML') }}
Requires:       {{ py2pkg('appdirs') }}
Requires:       {{ py2pkg('dogpile.cache') }}
Requires:       {{ py2pkg('jsonschema') }}
Requires:       {{ py2pkg('keystoneauth1') }}
Requires:       {{ py2pkg('python-openstackclient') }}
Requires:       {{ py2pkg('osc-lib') }}
Requires:       {{ py2pkg('oslo.i18n') }}
Requires:       {{ py2pkg('oslo.utils') }}
Requires:       {{ py2pkg('pbr') }}
Requires:       {{ py2pkg('requests') }}
Requires:       {{ py2pkg('six') }}
BuildArch:      noarch
%if 0%{?suse_version}
Requires(post): update-alternatives
Requires(postun): update-alternatives
%else
# on RDO, update-alternatives is in chkconfig
Requires(post): chkconfig
Requires(postun): chkconfig
%endif
%python_subpackages

%description
OpenStack Bare Metal Provisioning API Client Library

This is a client for the OpenStack Ironic API. It provides a Python API (the
ironicclient module) and a command-line interface (ironic).

%package -n {{ py2name() }}-doc
Summary:        Documentation for OpenStack Ironic API Client
Group:          Documentation/HTML
BuildRequires:  {{ py2pkg('Sphinx') }}
BuildRequires:  {{ py2pkg('openstackdocstheme') }}
BuildRequires:  {{ py2pkg('reno') }}
BuildRequires:  {{ py2pkg('sphinxcontrib-apidoc') }}

%description -n {{ py2name() }}-doc
This is a client for the OpenStack Ironic API (Bare Metal. There's a
Python API (the ironicclient module), and a command-line script (ironic).
Each implements 100% of the OpenStack Ironic API.
This package contains auto-generated documentation.

%prep
%autosetup -p1 -n {{ pypi_name }}-{{ upstream_version }}
%py_req_cleanup
sed -i 's/^warning-is-error.*/warning-is-error = 0/g' setup.cfg

%build
%{python_build}

PBR_VERSION={{ upstream_version }} sphinx-build -b html doc/source doc/build/html
# remove the sphinx-build leftovers
rm -rf doc/build/html/.{doctrees,buildinfo}

%install
%{python_install}
# bash completion
install -p -D -m 644 tools/ironic.bash_completion %{buildroot}%{_sysconfdir}/bash_completion.d/ironic.bash_completion
%python_clone -a %{buildroot}%{_bindir}/ironic
%python_clone -a %{buildroot}%{_sysconfdir}/bash_completion.d/ironic.bash_completion

%post
%{python_install_alternative ironic %{_sysconfdir}/bash_completion.d/ironic.bash_completion}

%postun
%python_uninstall_alternative ironic

%check
%python_exec -m stestr.cli run

%files %{python_files}
%license LICENSE
%doc README.rst
%{python_sitelib}/ironicclient
%{python_sitelib}/*.egg-info
%python_alternative %{_bindir}/ironic
%python_alternative %{_sysconfdir}/bash_completion.d/ironic.bash_completion

%files -n {{ py2name() }}-doc
%license LICENSE
%doc doc/build/html

%changelog
