{% set pypi_name = 'oslo.service' %}
{% set upstream_version = upstream_version('1.38.1') %}
{% set rpm_release = '1' %}
{% set source = url_pypi() %}
%if 0%{?rhel} || 0%{?fedora}
%global rdo 1
%endif
Name:           {{ py2name() }}
Version:        {{ py2rpmversion() }}
Release:        {{ py2rpmrelease() }}
Summary:        OpenStack oslo.service library
License:        {{ license('Apache-2.0') }}
Group:          Development/Languages/Python
URL:            https://launchpad.net/{{ pypi_name }}
Source0:        {{ source }}
BuildRequires:  openstack-macros
BuildRequires:  procps
BuildRequires:  {{ py2pkg('devel', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('Paste', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('PasteDeploy', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('Routes', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('WebOb', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('eventlet', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('fixtures', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('greenlet', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('mock', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('oslo.concurrency', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('oslo.config', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('oslo.i18n', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('oslo.log', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('oslo.utils', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('oslotest', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('pbr', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('requests', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('six', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('stestr', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('yappi', py_versions=['py2', 'py3']) }}
Requires:       {{ py2pkg('Paste') }}
Requires:       {{ py2pkg('PasteDeploy') }}
Requires:       {{ py2pkg('Routes') }}
Requires:       {{ py2pkg('WebOb') }}
Requires:       {{ py2pkg('debtcollector') }}
Requires:       {{ py2pkg('eventlet') }}
Requires:       {{ py2pkg('fixtures') }}
Requires:       {{ py2pkg('greenlet') }}
Requires:       {{ py2pkg('oslo.concurrency') }}
Requires:       {{ py2pkg('oslo.config') }}
Requires:       {{ py2pkg('oslo.i18n') }}
Requires:       {{ py2pkg('oslo.log') }}
Requires:       {{ py2pkg('oslo.utils') }}
Requires:       {{ py2pkg('six') }}
Requires:       {{ py2pkg('yappi') }}
BuildArch:      noarch
%python_subpackages

%description
oslo.service provides a framework for defining new long-running services using
the patterns established by other OpenStack applications. It also includes
utilities long-running applications might need for working with SSL or WSGI,
performing periodic operations, interacting with systemd, etc.

%package -n {{ py2name() }}-doc
Summary:        Documentation for OpenStack service library
BuildRequires:  {{ py2pkg('Sphinx') }}
BuildRequires:  {{ py2pkg('openstackdocstheme') }}

%description -n {{ py2name() }}-doc
oslo.service provides a framework for defining new long-running services using
the patterns established by other OpenStack applications. It also includes
utilities long-running applications might need for working with SSL or WSGI,
performing periodic operations, interacting with systemd, etc.
This package contains the documentation.

%prep
%autosetup -p1 -n {{ pypi_name }}-{{ upstream_version }}
%py_req_cleanup

%build
%{python_build}

# generate html docs
PBR_VERSION=%{version} sphinx-build -b html doc/source doc/build/html
# remove the sphinx-build leftovers
rm -rf doc/build/html/.{doctrees,buildinfo}

%install
%{python_install}

%check
%python_exec -m stestr.cli run

%files %{python_files}
%license LICENSE
%doc README.rst ChangeLog
%{python_sitelib}/oslo_service
%{python_sitelib}/*.egg-info

%files -n {{ py2name() }}-doc
%license LICENSE
%doc doc/build/html

%changelog
